class Solution {
    public int ladderLength(String b, String e, List<String> ans) {
       Set<String>set=new HashSet<>();
       Set<String>vis=new HashSet<>();
       for(int i=0;i<ans.size();i++){
        set.add(ans.get(i));
       }
       if(!set.contains(e)){
        return 0;
       }
       Queue<String>q=new LinkedList<>();
       q.add(b);
       int step=0;
       while(!q.isEmpty()){
        int size=q.size();
        for(int i=0;i<size;i++){
            String val=q.poll();
            if(val.equals(e)){
                return step+1;
            }
            else if(!vis.contains(val)){
                vis.add(val);
                for(int i1=0;i1<ans.size();i1++){
                    String t=ans.get(i1);
                    if(!vis.contains(t)){
                        int l=0;
                        for(int j=0;j<t.length();j++){
                            if(t.charAt(j)!=val.charAt(j)){
                                l++;
                            }
                        }
                        if(l==1 && !vis.contains(t)){
                           // ans.remove(t);
                            q.add(t);
                        }
                    }
                }
            }
        }
        step++;
       }
       return 0;
    }
}
